<?php

use Illuminate\Database\Seeder;
use Carbon\Carbon;
class MitigationTableSeeder extends Seeder
{
    /**
     * Populate the role table.
     *
     * @return void
     */
    public function run()
    {
        DB::table('mitigations')->insert([
            'id' => 10,
            'risk_id' => 0,
            'submission_date' => Carbon::now(),
            'last_update' => Carbon::now(),
            'planning_strategy' => 0,
            'mitigation_effort' => 0,
            'mitigation_cost' => 1,
            'mitigation_owner' => 0,
            'mitigation_team' => 12,
            'current_solution' => 'Change battery',
            'security_requirements' => '',
            'security_recommendations' => '',
            'submitted_by' => 2,
            'planning_date' => Carbon::now()->addDays(7),
            'mitigation_percent' => 0,
            'assessment_id' => 10,
            'authorities' => 0,
            'report' => 0,
            'created_at' => Carbon::now(),
            'updated_at' => Carbon::now(),
            'type' => 'CA'
        ]);
        DB::table('mitigations')->insert([
            'id' => 12,
            'risk_id' => 0,
            'submission_date' => Carbon::now(),
            'last_update' => Carbon::now(),
            'planning_strategy' => 0,
            'mitigation_effort' => 0,
            'mitigation_cost' => 1,
            'mitigation_owner' => 0,
            'mitigation_team' => 12,
            'current_solution' => 'Review power system',
            'security_requirements' => '',
            'security_recommendations' => '',
            'submitted_by' => 2,
            'planning_date' => Carbon::now()->addDays(7),
            'mitigation_percent' => 0,
            'assessment_id' => 10,
            'authorities' => 0,
            'report' => 0,
            'created_at' => Carbon::now(),
            'updated_at' => Carbon::now(),
            'type' => 'PA'
        ]);
        DB::table('mitigations')->insert([
            'id' => 13,
            'risk_id' => 0,
            'submission_date' => Carbon::now(),
            'last_update' => Carbon::now(),
            'planning_strategy' => 0,
            'mitigation_effort' => 0,
            'mitigation_cost' => 1,
            'mitigation_owner' => 0,
            'mitigation_team' => 12,
            'current_solution' => 'Keep people away from take-off area',
            'security_requirements' => '',
            'security_recommendations' => '',
            'submitted_by' => 2,
            'planning_date' => Carbon::now()->addDays(7),
            'mitigation_percent' => 0,
            'assessment_id' => 11,
            'authorities' => 0,
            'report' => 0,
            'created_at' => Carbon::now(),
            'updated_at' => Carbon::now(),
            'type' => 'PA'
        ]);
        DB::table('mitigations')->insert([
            'id' => 14,
            'risk_id' => 0,
            'submission_date' => Carbon::now(),
            'last_update' => Carbon::now(),
            'planning_strategy' => 0,
            'mitigation_effort' => 0,
            'mitigation_cost' => 1,
            'mitigation_owner' => 0,
            'mitigation_team' => 12,
            'current_solution' => 'System calibration',
            'security_requirements' => '',
            'security_recommendations' => '',
            'submitted_by' => 2,
            'planning_date' => Carbon::now()->addDays(7),
            'mitigation_percent' => 0,
            'assessment_id' => 11,
            'authorities' => 0,
            'report' => 0,
            'created_at' => Carbon::now(),
            'updated_at' => Carbon::now(),
            'type' => 'PA'
        ]);
        DB::table('mitigations')->insert([
            'id' => 15,
            'risk_id' => 0,
            'submission_date' => Carbon::now(),
            'last_update' => Carbon::now(),
            'planning_strategy' => 0,
            'mitigation_effort' => 0,
            'mitigation_cost' => 1,
            'mitigation_owner' => 0,
            'mitigation_team' => 11,
            'current_solution' => 'Train pilot to maintain connection',
            'security_requirements' => '',
            'security_recommendations' => '',
            'submitted_by' => 2,
            'planning_date' => Carbon::now()->addDays(7),
            'mitigation_percent' => 0,
            'assessment_id' => 12,
            'authorities' => 0,
            'report' => 0,
            'created_at' => Carbon::now(),
            'updated_at' => Carbon::now(),
            'type' => 'PA'
        ]);
        DB::table('mitigations')->insert([
            'id' => 16,
            'risk_id' => 0,
            'submission_date' => Carbon::now(),
            'last_update' => Carbon::now(),
            'planning_strategy' => 0,
            'mitigation_effort' => 0,
            'mitigation_cost' => 1,
            'mitigation_owner' => 0,
            'mitigation_team' => 15,
            'current_solution' => 'GPS system shall be calibrated according to wind parameter',
            'security_requirements' => '',
            'security_recommendations' => '',
            'submitted_by' => 2,
            'planning_date' => Carbon::now()->addDays(7),
            'mitigation_percent' => 0,
            'assessment_id' => 15,
            'authorities' => 0,
            'report' => 0,
            'created_at' => Carbon::now(),
            'updated_at' => Carbon::now(),
            'type' => 'CA'
        ]);
        DB::table('mitigations')->insert([
            'id' => 17,
            'risk_id' => 0,
            'submission_date' => Carbon::now(),
            'last_update' => Carbon::now(),
            'planning_strategy' => 0,
            'mitigation_effort' => 0,
            'mitigation_cost' => 1,
            'mitigation_owner' => 0,
            'mitigation_team' => 16,
            'current_solution' => 'The efficiency of the updated system shall be checked frequently. Procedure should be updated',
            'security_requirements' => '',
            'security_recommendations' => '',
            'submitted_by' => 2,
            'planning_date' => Carbon::now()->addDays(7),
            'mitigation_percent' => 0,
            'assessment_id' => 15,
            'authorities' => 0,
            'report' => 0,
            'created_at' => Carbon::now(),
            'updated_at' => Carbon::now(),
            'type' => 'PA'
        ]);
        DB::table('mitigations')->insert([
            'id' => 19,
            'risk_id' => 0,
            'submission_date' => Carbon::now(),
            'last_update' => Carbon::now(),
            'planning_strategy' => 0,
            'mitigation_effort' => 0,
            'mitigation_cost' => 1,
            'mitigation_owner' => 0,
            'mitigation_team' => 16,
            'current_solution' => 'Distance parameter shall be evaluated and adjusted accordingly',
            'security_requirements' => '',
            'security_recommendations' => '',
            'submitted_by' => 2,
            'planning_date' => Carbon::now()->addDays(7),
            'mitigation_percent' => 0,
            'assessment_id' => 14,
            'authorities' => 0,
            'report' => 0,
            'created_at' => Carbon::now(),
            'updated_at' => Carbon::now(),
            'type' => 'PA'
        ]);
        DB::table('mitigations')->insert([
            'id' => 20,
            'risk_id' => 0,
            'submission_date' => Carbon::now(),
            'last_update' => Carbon::now(),
            'planning_strategy' => 0,
            'mitigation_effort' => 0,
            'mitigation_cost' => 1,
            'mitigation_owner' => 0,
            'mitigation_team' => 14,
            'current_solution' => 'All pilots shall be informed immediately that the distance is not documented correctly. Distance shall be extended by 2 meters.',
            'security_requirements' => '',
            'security_recommendations' => '',
            'submitted_by' => 2,
            'planning_date' => Carbon::now()->addDays(7),
            'mitigation_percent' => 0,
            'assessment_id' => 14,
            'authorities' => 0,
            'report' => 0,
            'created_at' => Carbon::now(),
            'updated_at' => Carbon::now(),
            'type' => 'CA'
        ]);
        DB::table('mitigations')->insert([
            'id' => 21,
            'risk_id' => 0,
            'submission_date' => Carbon::now(),
            'last_update' => Carbon::now(),
            'planning_strategy' => 0,
            'mitigation_effort' => 0,
            'mitigation_cost' => 1,
            'mitigation_owner' => 0,
            'mitigation_team' => 13,
            'current_solution' => 'The responsible pilot shall be trained about the required pre-flight preparation procedure.',
            'security_requirements' => '',
            'security_recommendations' => '',
            'submitted_by' => 2,
            'planning_date' => Carbon::now()->addDays(7),
            'mitigation_percent' => 0,
            'assessment_id' => 13,
            'authorities' => 0,
            'report' => 0,
            'created_at' => Carbon::now(),
            'updated_at' => Carbon::now(),
            'type' => 'CA'
        ]);
        DB::table('mitigations')->insert([
            'id' => 22,
            'risk_id' => 0,
            'submission_date' => Carbon::now(),
            'last_update' => Carbon::now(),
            'planning_strategy' => 0,
            'mitigation_effort' => 0,
            'mitigation_cost' => 1,
            'mitigation_owner' => 0,
            'mitigation_team' => 16,
            'current_solution' => 'A checklist for area fitness shall be included into the flight preparation',
            'security_requirements' => '',
            'security_recommendations' => '',
            'submitted_by' => 2,
            'planning_date' => Carbon::now()->addDays(7),
            'mitigation_percent' => 0,
            'assessment_id' => 13,
            'authorities' => 0,
            'report' => 0,
            'created_at' => Carbon::now(),
            'updated_at' => Carbon::now(),
            'type' => 'PA'
        ]);
    }
}